<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafe">
	<!-- 자주 사용하는 sql 문을 미리 정의 해 놓기 -->
	<sql id="cafeColumns">
		num,writer,title,content,viewCount,
		TO_CHAR(regdate, 'YY"년 "MM"월 "DD"일 "HH24:MI') AS regdate
	</sql>

	<select id="getList" parameterType="test.cafe.dto.CafeDto" resultType="test.cafe.dto.CafeDto">
		SELECT *
		FROM (SELECT result1.*, ROWNUM rnum
				FROM (SELECT <include refid="cafeColumns"/>
						FROM board_cafe
						<where> <!-- writer, title, content 가 모두 null 일 경우 where 절이 만들어지지 않는다. -->
							<if test="writer != null">
								OR writer LIKE '%'||#{writer}||'%'
							</if>
							<if test="title != null">
								OR title LIKE '%'||#{title}||'%'
							</if>
							<if test="content != null">
								OR content LIKE '%'||#{content}||'%'
							</if>
						</where>
						ORDER BY num ASC) result1
				)
		WHERE rnum BETWEEN #{startRowNum} AND ${endRowNum}		
	</select>
	
	<insert id="insert" parameterType="test.cafe.dto.CafeDto">
		INSERT INTO board_cafe
		(num, writer, title, content, viewCount, regdate)
		VALUES(board_cafe_seq.NEXTVAL, #{writer}, #{title}, #{content}, #{viewCount}, SYSDATE)
	</insert>
	<update id="increaseViewCount" parameterType="int">
		UPDATE board_cafe
		SET viewCount =viewCount+1
		WHERE num=#{num}
	</update>
	<select id="getData" parameterType="test.cafe.dto.CafeDto" resultType="test.cafe.dto.CafeDto">
		SELECT result1.*
		FROM
			(SELECT <include refid="cafeColumns" />,
			LAG(num, 1, 0) OVER(ORDER BY num ASC) prevNum,
			LEAD(num, 1, 0) OVER(ORDER BY num ASC) nextNum
			FROM board_cafe
			<where> <!-- writer, title, content 가 모두 null 일 경우 where 절이 만들어지지 않는다. -->
				<if test="writer != null">
					OR writer LIKE '%'||#{writer}||'%'
				</if>
				<if test="title != null">
					OR title LIKE '%'||#{title}||'%'
				</if>
				<if test="content != null">
					OR content LIKE '%'||#{content}||'%'
				</if>
			</where>
			ORDER BY num ASC) result1
		WHERE num=#{num}
	</select>
	<delete id="delete" parameterType="int">
		DELETE FROM board_cafe
		WHERE num=#{num}
	</delete>
	<update id="update" parameterType="test.cafe.dto.CafeDto">
		UPDATE board_cafe
		SET title=#{title}, content=#{content}
		WHERE num=#{num}
	</update>
	<select id="getCount" parameterType="test.cafe.dto.CafeDto" resultType="int">
		SELECT NVL(MAX(ROWNUM), 0)
		FROM board_cafe
		<where> <!-- writer, title, content 가 모두 null 일 경우 where 절이 만들어지지 않는다. -->
			<if test="writer != null">
				OR writer LIKE '%'||#{writer}||'%'
			</if>
			<if test="title != null">
				OR title LIKE '%'||#{title}||'%'
			</if>
			<if test="content != null">
				OR content LIKE '%'||#{content}||'%'
			</if>
		</where>
	</select>
</mapper>